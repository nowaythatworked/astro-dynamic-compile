{"code":"import {\n  Fragment,\n  render as $$render,\n  createAstro as $$createAstro,\n  createComponent as $$createComponent,\n  renderComponent as $$renderComponent,\n  renderHead as $$renderHead,\n  maybeRenderHead as $$maybeRenderHead,\n  unescapeHTML as $$unescapeHTML,\n  renderSlot as $$renderSlot,\n  mergeSlots as $$mergeSlots,\n  addAttribute as $$addAttribute,\n  spreadAttributes as $$spreadAttributes,\n  defineStyleVars as $$defineStyleVars,\n  defineScriptVars as $$defineScriptVars,\n  createMetadata as $$createMetadata\n} from \"astro/runtime/server/index.js\";\n\n\nexport const $$metadata = $$createMetadata(\"<stdin>\", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });\n\nconst $$Astro = $$createAstro();\nconst Astro = $$Astro;\nconst $$stdin = $$createComponent(async ($$result, $$props, $$slots) => {\nconst Astro = $$result.createAstro($$Astro, $$props, $$slots);\nAstro.self = $$stdin;\n\nreturn $$render`<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\">\n\t\t<meta name=\"viewport\" content=\"width=device-width\">\n\t\t<meta name=\"generator\"${$$addAttribute(Astro.generator, \"content\")}>\n\t\t<title>Astro</title>\n\t${$$renderHead($$result)}</head>\n\t<body>\n\t\t<h1>Astro</h1>\n\t</body></html>`;\n}, '<stdin>');\nexport default $$stdin;\n","diagnostics":[],"map":"","scope":"VAI6J5MX","css":[],"scripts":[],"hydratedComponents":[],"clientOnlyComponents":[],"containsHead":true,"styleError":[]}